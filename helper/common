# common functions, TARGET isolation

. helper/defaults

set -exu
ORIG_PWD="$(pwd)"

die() {
	echo "$*"
	exit 1
}

[ $(id -u) -ne 0 ] || die "Don't run me as root."

if test $# -gt 0 ; then
case "$1" in
	(:*)
		export TARGET="$1"
		;;
	(*)
		if [ -z "$TARGET" ] ; then
			if [ -z "$1" ] ; then
				source helper/help
				exit 1
			fi
			export TARGET="$1"
			shift
		fi
		;;
esac
else
	if test ! -v TARGET || test -z "$TARGET" ; then
		source helper/help
		exit 1
	fi
fi

cleanup() {
	: does nothing, can be overridden
}

echo_to() {
	DEST="$1"
	shift
	echo "$@" | sudo tee "$DEST" >/dev/null
}

cat_to() {
	DEST="$1"
	shift
	cat "$@" | sudo tee "$DEST" >/dev/null
}

loopback() {
	set -e
	local L=$(sudo losetup -f)
	test -b "$L"
	test -f $T/info/loop.$$
	local DATA="$1"
	shift
	sudo losetup "$@" $L "$DATA"
	udevadm settle
	echo "$L $$" >> $T/info/loop.$$
	echo $L
}

mount() {
	set -e
	local DEV="$1"
	local SRC="$2"
	shift; shift
	local OPTS="$*"
	test -f $T/info/mount.$$

	if test -d "$DEV" ; then
		OPTS="--bind $OPTS"
	fi
	sudo mount $OPTS "$DEV" "$SRC"
	echo "$DEV $$" >> $T/info/mount.$$
}

_cleanup() {
	set +e
	set -xv
	cd "$ORIG_PWD"
	cleanup

	test -d $T/root/$T && sudo rmdir $T/root/$T

	local L M
	while read M _ ; do sudo umount $M; done < <(tac $T/info/mount.$$)
	while read L _ ; do sudo losetup -d $L ; done < $T/info/loop.$$
	rm -f $T/info/mount.$$  $T/info/loop.$$
	
	test -v _BMB_THIS_TEMP && rm -rf $T
}

if [ ! -v BMB_TEMP ] ; then
	T=$(tempfile -d "$TEMPDIR")
	rm -f "$T"
	export BMB_TEMP="$T"
	_BMB_THIS_TEMP="$T"

else
	T="$BMB_TEMP"
fi
mkdir -p "$T/info"
trap "_cleanup" EXIT

touch $T/info/loop.$$ # list of loopback devices I created
touch $T/info/mount.$$ # list of things I mounted

source helper/params
source helper/mirror

if ! test -v UBOOT_ARCH ; then
	UBOOT_ARCH=$ARCH
fi
