#!/bin/bash

source helper/common

usage() {
    cat <<'___'
Usage: make_root device_or_rootdir_or_image bootimage?

Builds root+boot file systems.

Argumments:

* rootfs dir

* bootfs dir

Either of these may be image files or partitions, which get mounted while
building.
___
    exit 1
}

DIST=buster

P=""
test -f /usr/bin/systemd-nspawn || P="$P systemd-container"
test -f /usr/bin/realpath || P="$P realpath"
test -f /usr/bin/qemu-$BIN_ARCH-static || P="$P qemu-user-static"
test -f /usr/bin/$BIN_ARCH-linux-gnu-gcc || P="$P gcc-$BIN_ARCH-linux-gnu"
test -z "$P" || sudo apt-get install --no-install-recommends $P

R=$T/root
mkdir -p $R
if test "$1" = "/" ; then
	R=/
	echo WARNING running on current system
elif test -z "$1" || test "$1" = "--" ; then
	echo "You need to supply a place to store the root image."
	exit 1
elif test -b "$1" ; then
	mount "$1" $R
elif test -d "$1" ; then
	mount "$1" $R
else
	test -s "$1"
	DEV=$(loopback "$1")
	mount ${DEV} $R
fi
shift

sudo mkdir -p $T/root/boot
if test -z "$1" ; then
	:
elif test "$1" = "--" ; then
	:
elif test "$1" = "-" ; then
	shift
elif test -b "$1" ; then
	mount "$1" $R/boot
	shift
elif test -d "$1" ; then
	mount "$1" $R/boot
	shift
else
	test -s "$1"
	DEV=$(loopback "$1")
	mount $DEV $R/boot
	shift
fi

sudo mkdir -p $R/$T

if test "$#" -gt 0 && test "$1" = "--" ; then shift; fi

set -u

if ! test -x $R/usr/bin/qemu-$BIN_ARCH-static ; then
	mkdir -p $R
	sudo debootstrap --arch=$ARCH --foreign --variant=minbase $DIST $R || true
	sudo mkdir -p $R/usr/bin/
	sudo cp /usr/bin/qemu-$BIN_ARCH-static $R/usr/bin/
fi
if test -x $R/debootstrap/debootstrap ; then
	sudo chroot $R /debootstrap/debootstrap --second-stage
	test ! -f $R/debootstrap/debootstrap
fi

mkdir -p $T/kernel
bin/make_kernel $T/kernel

mkdir -p $T/run
if test -L $R/etc/resolv.conf ; then
	sudo rm -f $R/etc/resolv.conf
fi
if test ! -s $R/etc/resolv.conf ; then
	sudo cat /etc/resolv.conf > $R/etc/resolv.conf
fi

C="sudo systemd-nspawn -a -M $(basename $T) -D $R --bind=$T"
# does not work: --bind=$T/run:/run"

if ! test -s $R/usr/bin/gpg-agent ; then # for apt-key
	$C apt update -y || true
	/bin/bash
	$C apt update -y
	$C apt-get install --no-install-recommends -y gpg gpg-agent
fi

# Add distro and user specific archive
if test -s apt/$TARGET ; then
	source apt/$TARGET
fi
if test -v SPECIAL ; then
	for S in $SPECIAL ; do
		source helper/apt/$S
	done
fi

### now find packages to install

PKG=""
test -f $R/usr/bin/eatmydata || PKG="$PKG eatmydata"
if test -n "$PKG" ; then
	$C apt update -y
	$C apt-get install --no-install-recommends -y $PKG
fi

PKG=""
test -f $R/lib/systemd/systemd || PKG="$PKG systemd"
test -f $R/usr/bin/aptitude || PKG="$PKG aptitude"
test -f $R/usr/bin/strace || PKG="$PKG strace"
test -f $R/usr/bin/pstree || PKG="$PKG psmisc"
test -f $R/usr/bin/ssh || PKG="$PKG openssh-client"
test -f $R/usr/sbin/update-initramfs || PKG="$PKG initramfs-tools"
test -f $R/usr/bin/file || PKG="$PKG file"
test -f $R/usr/sbin/sshd || PKG="$PKG openssh-server"
test -f $R/usr/bin/dbus-daemon || PKG="$PKG dbus"
test -f $R/usr/share/perl5/Term/ReadLine/Perl.pm || PKG="$PKG libterm-readline-perl-perl"
test -f $R/usr/bin/less || PKG="$PKG less"
test -f $R/usr/bin/strace || PKG="$PKG strace"
test -f $R/usr/bin/vim.tiny || PKG="$PKG vim-tiny"
test -f $R/sbin/ip || PKG="$PKG iproute2"
test -f $R/sbin/lsmod || PKG="$PKG kmod"
test -f $R/sbin/udevadm || PKG="$PKG udev"
test -f $R/sbin/init || PKG="$PKG systemd-sysv"

source snips/$TARGET/missing_packages

if test -f "$R/root.partid" ; then
	sed -i -e "s/PARTUUID=[-0-9a-f]* /PARTUUID=$()/" $R/etc/default/extlinux $R/boot/extlinux/extlinux.conf
	rm -f "$R/root.partid"
fi

if test -n "$PKG" ; then
	$C eatmydata apt update -y
	$C eatmydata apt-get install --no-install-recommends -y $PKG
fi

$C systemctl enable systemd-networkd
$C systemctl enable systemd-resolved
if [ "$R" != "/" ] && [ "cat $R/etc/hostname" == "$(cat /etc/hostname)" ] ; then
	# Duh.
	echo_to $R/etc/hostname TODO
fi

if test ! -s $R/boot/config-$(cat $T/kernel/linux.version) ; then
	$C eatmydata dpkg -i $T/kernel/linux-image.deb
fi

if grep -qs Storage=auto $R/etc/systemd/journald.conf ; then
	sudo sed -i -e 's/^#* *Storage=.*/Storage=volatile/' $R/etc/systemd/journald.conf
fi

source snips/$TARGET/partinfo
source snips/$TARGET/post_root

if test -v SPECIAL ; then
	for s in $SPECIAL ; do
		source helper/special/$s
	done
fi

if test -n "$*" ; then
$C "$@"
fi

